/**
 * auto generated, DO NOT EDIT THIS FILE
 */

#include "Mock{{ class_name }}.h"
#include "adapters/I{{ class_name }}.h"
#include "adapters/{{ class_name }}/{{ class_name }}.h"


using namespace vcf;

Mock{{ class_name }}::Mock{{ class_name }}(const vcf::weakHandle<INetworkEventHandler>& networkEventHandler) :
    mNetworkEventHandler(networkEventHandler)
{
    real{{ class_name }} = std::make_shared<{{ class_name }}>(networkEventHandler);

{% for method in method_list %}
    ON_CALL(*this, {{method}}({{ arg_list[loop.index0] }}))
        .WillByDefault(::Invoke(dynamic_cast<{{ class_name }} *>(real{{ class_name }}.get()), &{{ class_name }}::{{method}}));
{% endfor %}

}

